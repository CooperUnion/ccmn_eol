Import('env')

flags_opt = AddOption('--pioflags',
    dest='pioflags',
    type='string',
    action='store',
    metavar='-e blink1.1',
    help='PlatformIO environment'
)
env['AddHelp']("fw --pioflags=FLAGS",
               'Run pio for fw/ with FLAGS, e.g. `scons fw --pioflags="run -e dut"`')

pioflags = GetOption('pioflags')
command = None
if pioflags is None:
    command = 'pio run -d fw'
else:
    command = f'pio {pioflags} -d fw'

env_pio_builder = env.Clone()

[pio_builder] = env_pio_builder.Command(
    env.Dir('.'),
    [],
    command
)

env_pio_builder["ENV"]["PATH"] = ":".join(list(filter(lambda x: env["ENV"]["VIRTUAL_ENV"] not in x, env["ENV"]["PATH"].split(":"))))

print(env_pio_builder["ENV"])

env_pio_builder.AlwaysBuild(pio_builder)
env_pio_builder.Depends(pio_builder, env['PIP_PACKAGES'])
env_pio_builder.Depends(pio_builder, env['ESP_CARGO'])

env.Alias('fw', pio_builder)
env['AddHelp']('fw', 'Build fw')
